
# NELL
parser = argparse.ArgumentParser()
parser.add_argument('--task', type=str, default="ZSL", help='ZSL or GZSL')
parser.add_argument('--dataset', default='NELL',help='dataset: NELL,WiKi')
parser.add_argument('--embed_model', default='DistMult', help='DistMult, TransE')


###################################################################

parser.add_argument('--workers', type=int, help='number of data loading workers', default=4)
parser.add_argument('--gen_nepoch', type=int, default=100, help='number of epochs to train for')
parser.add_argument('--lr', type=float, default=0.00003, help='learning rate to train generater')
###################################################################

parser.add_argument('--beta', type=float, default=1, help='tc weight')
parser.add_argument('--weight_decay', type=float, default=1e-6, help='weight_decay')
parser.add_argument('--dis', type=float, default=0.3, help='Discriminator weight')
parser.add_argument('--dis_step', type=float, default=2, help='Discriminator update interval')
parser.add_argument('--kl_warmup', type=float, default=0.01, help='kl warm-up for VAE')
parser.add_argument('--tc_warmup', type=float, default=0.005, help='tc warm-up')

parser.add_argument('--vae_dec_drop', type=float, default=0.5, help='dropout rate in the VAE decoder')
parser.add_argument('--vae_enc_drop', type=float, default=0.4, help='dropout rate in the VAE encoder')
parser.add_argument('--ae_drop', type=float, default=0.2, help='dropout rate in the auto-encoder')

parser.add_argument('--classifier_lr', type=float, default=0.003, help='learning rate to train softmax classifier')
parser.add_argument('--classifier_steps', type=int, default=50, help='training steps of the classifier')

parser.add_argument('--batchsize', type=int, default=64, help='input batch size')
parser.add_argument('--nSample', type=int, default=20, help='number features to generate per class')

parser.add_argument('--disp_interval', type=int, default=1000)
parser.add_argument('--save_interval', type=int, default=10000)
parser.add_argument('--evl_interval',  type=int, default=5000)
parser.add_argument('--evl_start',  type=int, default=29999)
parser.add_argument('--manualSeed', type=int, default=6152, help='manual seed')

# Paramater of trained Feature Encoder

parser.add_argument('--entity_dim', type=float, default=100, help='dimention of entity, NELL 100 Wiki 50')
parser.add_argument('--embed_dim', type=float, default=100, help='dimention of entity, NELL 100 Wiki 50')
parser.add_argument('--latent_dim_size', type=float, default=2, help='dimention of feature encoder latent dim resize e.g NELL = 2, WiKi=0.25 ')
parser.add_argument('--pretrain_margin', default=10.0, type=float, help='margin of Feature Encoder')
parser.add_argument('--add_loss_weight', default=0.01, type=float, help='class loss weight of Feature Encoder')
parser.add_argument('--ep_dim', type=int, default=200)
parser.add_argument('--extractor_way', default='_addloss', help='extractor_embed_type')
parser.add_argument('--sp_dim1', default=200, type=int, help='sport encoder wiki 800 nell 200' )
parser.add_argument('--sp_dim2', default=400, type=int, help='sport encoder wiki 800 nell 400')
# Paramater of VAE
parser.add_argument('--latent_dim', type=int, default=20, help='dimention of latent z')
parser.add_argument('--q_z_nn_output_dim', type=int, default=128, help='dimention of hidden layer in encoder')
parser.add_argument('--vae_encoder_dim', type=int, default=500, help='dimention of encoder NELL 500')
parser.add_argument('--vae_decoder_dim', type=int, default=200, help='dimention of decoder NELL 500' )
# Paramater of Denoising AE

parser.add_argument('--RS_dim', type=int, default=200)
parser.add_argument('--IS_dim', type=int, default=200)
parser.add_argument('--SCN_dim', type=int, default=400)

parser.add_argument('--ga', type=float, default=5, help='relationNet weight')
parser.add_argument('--ca', default=10, type=float, help='compare closs weight')
parser.add_argument('--co', default=1, type=float, help='compare closs weight')
parser.add_argument('--co_ratio', default=10, type=float, help='compare closs weight')
parser.add_argument('--gpu', default='0', type=str, help='index of GPU to use')
opt = parser.parse_args()



# Wiki
parser = argparse.ArgumentParser()
parser.add_argument('--task', type=str, default="GZSL", help='ZSL or GZSL')
parser.add_argument('--dataset', default='WiKi',help='dataset: NELL,WiKi')
parser.add_argument('--embed_model', default='DistMult', help='DistMult, TransE')

###################################################################

parser.add_argument('--workers', type=int, help='number of data loading workers', default=4)
parser.add_argument('--gen_nepoch', type=int, default=50, help='number of epochs to train for')
parser.add_argument('--lr', type=float, default=0.00003, help='learning rate to train generater')
###################################################################

parser.add_argument('--beta', type=float, default=1, help='tc weight')
parser.add_argument('--weight_decay', type=float, default=1e-6, help='weight_decay')
parser.add_argument('--dis', type=float, default=0.3, help='Discriminator weight')
parser.add_argument('--dis_step', type=float, default=2, help='Discriminator update interval')
parser.add_argument('--kl_warmup', type=float, default=0.005, help='kl warm-up for VAE')
parser.add_argument('--tc_warmup', type=float, default=0.005, help='tc warm-up')

parser.add_argument('--vae_dec_drop', type=float, default=0.5, help='dropout rate in the VAE decoder')
parser.add_argument('--vae_enc_drop', type=float, default=0.4, help='dropout rate in the VAE encoder')
parser.add_argument('--ae_drop', type=float, default=0.2, help='dropout rate in the auto-encoder')

parser.add_argument('--batchsize', type=int, default=64, help='input batch size')
parser.add_argument('--nSample', type=int, default=20, help='number features to generate per class')

parser.add_argument('--disp_interval', type=int, default=1000)
parser.add_argument('--save_interval', type=int, default=10000)
parser.add_argument('--evl_interval',  type=int, default=5000)
parser.add_argument('--evl_start',  type=int, default=29999)
parser.add_argument('--manualSeed', type=int, default=6152, help='manual seed')

# Paramater of trained Feature Encoder

parser.add_argument('--entity_dim', type=float, default=50, help='dimention of entity, NELL 100 Wiki 50')
parser.add_argument('--embed_dim', type=float, default=50, help='dimention of entity, NELL 100 Wiki 50')
parser.add_argument('--latent_dim_size', type=float, default=0.25, help='dimention of feature encoder latent dim resize e.g NELL = 2, WiKi=0.25 ')
parser.add_argument('--pretrain_margin', default=10.0, type=float, help='margin of Feature Encoder')
parser.add_argument('--add_loss_weight', default=0.01, type=float, help='class loss weight of Feature Encoder')
parser.add_argument('--ep_dim', type=int, default=800)
parser.add_argument('--extractor_way', default='_addloss', help='extractor_embed_type')
parser.add_argument('--sp_dim1', default=800, type=int, help='sport encoder wiki 800 nell 100' )
parser.add_argument('--sp_dim2', default=800, type=int, help='sport encoder wiki 800 nell 200')


# Paramater of VAE45
parser.add_argument('--latent_dim', type=int, default=20, help='dimention of latent z')
parser.add_argument('--q_z_nn_output_dim', type=int, default=128, help='dimention of hidden layer in encoder')
parser.add_argument('--vae_encoder_dim', type=int, default=800, help='dimention of encoder NELL 500')
parser.add_argument('--vae_decoder_dim', type=int, default=800, help='dimention of decoder NELL 500' )
# Paramater of Denoising AE

parser.add_argument('--RS_dim', type=int, default=400)
parser.add_argument('--IS_dim', type=int, default=400)
parser.add_argument('--SCN_dim', type=int, default=200)

parser.add_argument('--ga', type=float, default=5, help='relationNet weight')
parser.add_argument('--ca', default=1000, type=float, help='compare closs weight')
parser.add_argument('--co', default=1.5, type=float, help='compare closs weight')
parser.add_argument('--co_ratio', default=2, type=float, help='compare closs weight')
parser.add_argument('--gpu', default='0', type=str, help='index of GPU to use')
opt = parser.parse_args()